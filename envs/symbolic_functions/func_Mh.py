import numpy as np
from numpy import cos, sin
from numba import jit

# @jit(nopython=True, fastmath=True)
def func_Mh(in1=None, in2=None, in3=None): 

    Ib_1 = in2[4]
    Ib_2 = in2[5]
    Ib_3 = in2[6]
    Ih_1 = in2[7]
    Ih_2 = in2[8]
    Ih_3 = in2[9]
    Ir_1 = in2[10]
    Ir_2 = in2[11]
    Ir_3 = in2[12]
    L3a = in3[4]
    L7a = in3[14]
    L3c = in3[6]
    P5_1 = in3[19]
    P5_2 = in3[20]
    Rb_1_1 = in1[13]
    Rb_1_2 = in1[16]
    Rb_1_3 = in1[19]
    Rb_2_1 = in1[14]
    Rb_2_2 = in1[17]
    Rb_2_3 = in1[20]
    Rb_3_1 = in1[15]
    Rb_3_2 = in1[18]
    Rb_3_3 = in1[21]
    alpha_3 = in3[7]
    g = in2[3]
    mb = in2[0]
    mh = in2[1]
    mr = in2[2]
    offset_x = in3[23]
    theta_WL_1 = in1[0]
    theta_WL_2 = in1[1]
    thetaD_WL_1 = in1[5]
    thetaD_WL_2 = in1[6]
    w_1 = in1[10]
    w_2 = in1[11]
    w_3 = in1[12]
    xD_1 = in1[7]
    xD_2 = in1[8]
    xD_3 = in1[9]

    cos_theta_WL_1 = cos(theta_WL_1)
    sin_theta_WL_1 = sin(theta_WL_1)
    cos_theta_WL_2 = cos(theta_WL_2)
    sin_theta_WL_2 = sin(theta_WL_2)
    cos_alpha_3 = cos(alpha_3)
    sin_alpha_3 = sin(alpha_3)
    
    et1 = (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et2 = (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et3 = (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et4 = (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et5 = (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et6 = (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et7 = (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et8 = (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et9 = (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et10 = (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et11 = (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et12 = (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et13 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et14 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et15 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et16 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et17 = (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et18 = (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et19 = (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et20 = (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et21 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et22 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et23 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et24 = (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et25 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et26 = mh * (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) + (mh * (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 - (mr * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
    et27 = (mr * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
    et28 = mh * (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) + (mh * (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 - (mr * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
    et29 = (mr * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
    et30 = mh * (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) + (mh * (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 - (mr * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
    et31 = (mr * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
    et32 = (mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0)) / 2.0
    et33 = mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0) * (- 1.0 / 2.0)
    et34 = Ih_1 * 2.0 + (mr * ((Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0)) / 2.0
    et35 = (mr * ((Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0)) / 2.0
    et36 = (mh * ((Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0)) / 2.0
    et37 = (mh * ((Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0)) / 2.0
    et38 = (mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0)) / 2.0
    et39 = (mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0)) / 2.0
    et40 = mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0) * (- 1.0 / 2.0)
    et41 = mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0) * (- 1.0 / 2.0)
    et42 = ((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et43 = ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et44 = ((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et45 = ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et46 = (mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0)) / 2.0
    et47 = mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0) * (- 1.0 / 2.0)
    et48 = mh * (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) - (mh * (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0)) / 2.0
    et49 = mr * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) * (- 1.0 / 2.0)
    et50 = mh * (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) + (mh * (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 - (mr * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
    et51 = (mr * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
    et52 = mh * (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) - (mh * (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0)) / 2.0
    et53 = mr * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) * (- 1.0 / 2.0)
    et54 = mh * (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) + (mh * (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 - (mr * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
    et55 = (mr * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
    et56 = mh * (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) - (mh * (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0)) / 2.0
    et57 = mr * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) * (- 1.0 / 2.0)
    et58 = mh * (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) + (mh * (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 - (mr * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
    et59 = (mr * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0
    et60 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et61 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et62 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et63 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et64 = (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et65 = (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et66 = (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et67 = (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et68 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et69 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et70 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et71 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et72 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et73 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et74 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et75 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et76 = Ib_1 + Ih_1 * 2.0 + Ir_1 * 2.0 + (mh * ((Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0)) / 2.0
    et77 = (mh * ((Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0)) / 2.0
    et78 = (mr * ((Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0 + (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0 + (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0)) / 2.0
    et79 = (mr * ((Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0 + (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0 + (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0)) / 2.0
    et80 = mh * (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) - (mh * (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0)) / 2.0
    et81 = mr * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) * (- 1.0 / 2.0)
    et82 = mh * (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) - (mh * (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0)) / 2.0
    et83 = mr * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) * (- 1.0 / 2.0)
    et84 = mh * (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0) * (- 1.0 / 2.0) - (mh * (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0)) / 2.0
    et85 = mr * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) * (- 1.0 / 2.0)
    et86 = ((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et87 = ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et88 = ((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et89 = ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et90 = (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et91 = (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et92 = (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et93 = (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et94 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et95 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et96 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et97 = (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et98 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et99 = mr * ((Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0)
    et100 = - 1.0 / 2.0
    et101 = (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et102 = (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et103 = mh * ((Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0) * (- 1.0 / 2.0)
    et104 = mh * ((Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0) * (- 1.0 / 2.0) + et99 * et100
    et105 = mr * (et101 + et102) * (- 1.0 / 2.0)
    et106 = Ib_2 + Ih_2 * 2.0 + Ir_2 * 2.0 + mh * ((Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0 + (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0)
    et107 = mr * ((Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0 + (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) ** 2 * 2.0)
    et108 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et109 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et110 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et111 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et112 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et113 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et114 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et115 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et116 = mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0) * (- 1.0 / 2.0)
    et117 = mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0) * (- 1.0 / 2.0)
    et118 = (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et119 = (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et120 = (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et121 = (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et122 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et123 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et124 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et125 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et126 = Ib_3 + Ih_3 * 2.0 + Ir_3 * 2.0 + (mh * ((Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0)) / 2.0
    et127 = (mh * ((Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0)) / 2.0
    et128 = (mr * ((Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0)) / 2.0
    et129 = (mr * ((Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0 + (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) ** 2 * 2.0)) / 2.0
    et130 = mr * ((Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0)
    et131 = - 1.0 / 2.0
    et132 = (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et133 = (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et134 = mh * ((Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0) * (- 1.0 / 2.0)
    et135 = mh * ((Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0) * (- 1.0 / 2.0) + et130 * et131
    et136 = mr * (et132 + et133) * (- 1.0 / 2.0)
    et137 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et138 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et139 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et140 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et141 = (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et142 = (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et143 = (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et144 = (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0
    et145 = (mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0)) / 2.0
    et146 = (mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0)) / 2.0
    et147 = (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et148 = (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et149 = (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et150 = (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et151 = (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et152 = (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et153 = (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et154 = (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    mt1 = np.array([et34 + et35 + et36 + et37,et32 + et33,et30 + et31,et28 + et29,et26 + et27,(mh * (et23 + et24 + et25)) / 2.0 - (mh * (et21 + et22)) / 2.0 - (mr * (et17 + et18)) / 2.0 - (mr * (et19 + et20)) / 2.0,mh * (et9 + et10) * (- 1.0 / 2.0) + (mh * (et11 + et12)) / 2.0 - (mr * (et13 + et14)) / 2.0 + (mr * (et15 + et16)) / 2.0,(mh * (et1 + et2)) / 2.0 - (mh * (et3 + et4)) / 2.0 + (mr * (et5 + et6)) / 2.0 - (mr * (et7 + et8)) / 2.0,et46 + et47])
    mt2 = np.array([Ir_1 * 2.0 + (mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) ** 2 * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) ** 2 * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) ** 2 * 2.0)) / 2.0 + (mr * (((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) ** 2 * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) ** 2 * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) ** 2 * 2.0)) / 2.0,(mr * (L7a * Rb_1_3 * cos_theta_WL_2 + L7a * Rb_1_2 * sin_theta_WL_2)) / 2.0 + (mr * (L7a * Rb_1_3 * cos_theta_WL_2 - L7a * Rb_1_2 * sin_theta_WL_2)) / 2.0])
    mt3 = np.array([(mr * (L7a * Rb_2_3 * cos_theta_WL_2 + L7a * Rb_2_2 * sin_theta_WL_2)) / 2.0 + (mr * (L7a * Rb_2_3 * cos_theta_WL_2 - L7a * Rb_2_2 * sin_theta_WL_2)) / 2.0,(mr * (L7a * Rb_3_3 * cos_theta_WL_2 + L7a * Rb_3_2 * sin_theta_WL_2)) / 2.0 + (mr * (L7a * Rb_3_3 * cos_theta_WL_2 - L7a * Rb_3_2 * sin_theta_WL_2)) / 2.0,mr * (et42 + et43) * (- 1.0 / 2.0) + (mr * (et44 + et45)) / 2.0,et40 + et41,et38 + et39,et50 + et51,(mr * (L7a * Rb_1_3 * cos_theta_WL_2 + L7a * Rb_1_2 * sin_theta_WL_2)) / 2.0 + (mr * (L7a * Rb_1_3 * cos_theta_WL_2 - L7a * Rb_1_2 * sin_theta_WL_2)) / 2.0,mb + mh * 2.0 + mr * 2.0,0.0,0.0,et48 + et49])
    mt4 = np.array([- mh * (Rb_1_3 * offset_x * 2.0 - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) - mr * (Rb_1_3 * offset_x * 2.0 - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0)])
    mt5 = np.array([(mh * (Rb_1_2 * offset_x * 2.0 - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mh * (Rb_1_2 * offset_x * 2.0 + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_1_2 * offset_x * 2.0 - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_1_2 * offset_x * 2.0 + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0,et54 + et55,(mr * (L7a * Rb_2_3 * cos_theta_WL_2 + L7a * Rb_2_2 * sin_theta_WL_2)) / 2.0 + (mr * (L7a * Rb_2_3 * cos_theta_WL_2 - L7a * Rb_2_2 * sin_theta_WL_2)) / 2.0,0.0,mb + mh * 2.0 + mr * 2.0])
    mt6 = np.array([0.0,et52 + et53,- mh * (Rb_2_3 * offset_x * 2.0 - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) - mr * (Rb_2_3 * offset_x * 2.0 - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0)])
    mt7 = np.array([(mh * (Rb_2_2 * offset_x * 2.0 - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mh * (Rb_2_2 * offset_x * 2.0 + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_2_2 * offset_x * 2.0 - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_2_2 * offset_x * 2.0 + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0,et58 + et59,(mr * (L7a * Rb_3_3 * cos_theta_WL_2 + L7a * Rb_3_2 * sin_theta_WL_2)) / 2.0 + (mr * (L7a * Rb_3_3 * cos_theta_WL_2 - L7a * Rb_3_2 * sin_theta_WL_2)) / 2.0,0.0,0.0])
    mt8 = np.array([mb + mh * 2.0 + mr * 2.0,et56 + et57,- mh * (Rb_3_3 * offset_x * 2.0 - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) - mr * (Rb_3_3 * offset_x * 2.0 - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0)])
    mt9 = np.array([(mh * (Rb_3_2 * offset_x * 2.0 - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mh * (Rb_3_2 * offset_x * 2.0 + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_3_2 * offset_x * 2.0 - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_3_2 * offset_x * 2.0 + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0,(mh * (et96 + et97 + et98)) / 2.0 - (mh * (et94 + et95)) / 2.0 - (mr * (et90 + et91)) / 2.0 - (mr * (et92 + et93)) / 2.0])
    mt10 = np.array([mr * (et86 + et87) * (- 1.0 / 2.0) + (mr * (et88 + et89)) / 2.0,et84 + et85,et82 + et83,et80 + et81,et76 + et77 + et78 + et79,(mh * (et68 + et69)) / 2.0 + (mh * (et70 + et71)) / 2.0 + (mr * (et72 + et73)) / 2.0 - (mr * (et74 + et75)) / 2.0,mh * (et60 + et61) * (- 1.0 / 2.0) - (mh * (et62 + et63)) / 2.0 - (mr * (et64 + et65)) / 2.0 + (mr * (et66 + et67)) / 2.0,mh * (et118 + et119) * (- 1.0 / 2.0) + (mh * (et120 + et121)) / 2.0 - (mr * (et122 + et123)) / 2.0 + (mr * (et124 + et125)) / 2.0,et116 + et117])
    mt11 = np.array([- mh * (Rb_1_3 * offset_x * 2.0 - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) - mr * (Rb_1_3 * offset_x * 2.0 - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0),- mh * (Rb_2_3 * offset_x * 2.0 - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) - mr * (Rb_2_3 * offset_x * 2.0 - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0)])
    mt12 = np.array([- mh * (Rb_3_3 * offset_x * 2.0 - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0) - mr * (Rb_3_3 * offset_x * 2.0 - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0),(mh * (et108 + et109)) / 2.0 + (mh * (et110 + et111)) / 2.0 + (mr * (et112 + et113)) / 2.0 - (mr * (et114 + et115)) / 2.0,et106 + et107,et103 + et104 + et105,(mh * (et147 + et148)) / 2.0 - (mh * (et149 + et150)) / 2.0 + (mr * (et151 + et152)) / 2.0 - (mr * (et153 + et154)) / 2.0,et145 + et146])
    mt13 = np.array([(mh * (Rb_1_2 * offset_x * 2.0 - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mh * (Rb_1_2 * offset_x * 2.0 + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_1_2 * offset_x * 2.0 - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_1_2 * offset_x * 2.0 + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0])
    mt14 = np.array([(mh * (Rb_2_2 * offset_x * 2.0 - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mh * (Rb_2_2 * offset_x * 2.0 + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_2_2 * offset_x * 2.0 - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_2_2 * offset_x * 2.0 + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0])
    mt15 = np.array([(mh * (Rb_3_2 * offset_x * 2.0 - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mh * (Rb_3_2 * offset_x * 2.0 + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_3_2 * offset_x * 2.0 - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0 + (mr * (Rb_3_2 * offset_x * 2.0 + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0)) / 2.0,mh * (et137 + et138) * (- 1.0 / 2.0) - (mh * (et139 + et140)) / 2.0 - (mr * (et141 + et142)) / 2.0 + (mr * (et143 + et144)) / 2.0,et134 + et135 + et136,et126 + et127 + et128 + et129])
    M = np.array([*mt1,*mt2,*mt3,*mt4,*mt5,*mt6,*mt7,*mt8,*mt9,*mt10,*mt11,*mt12,*mt13,*mt14,*mt15]).reshape(8,8)
    # if nargout > 1
    et155 = mr * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
    et156 = - (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et157 = mh * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et158 = - mh * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et159 = mr * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et160 = et155 * et156
    et161 = mr * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
    et162 = - (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et163 = mh * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et164 = - mh * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et165 = mr * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et166 = et161 * et162
    et167 = mr * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
    et168 = - (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et169 = mh * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et170 = - mh * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et171 = mr * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et172 = et167 * et168
    et173 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1))
    et174 = - (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et175 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et176 = et173 * et174 + mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et177 = mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et178 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1))
    et179 = - (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et180 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et181 = et178 * et179 + mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et182 = mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et183 = offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) - (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1) * 2.0 + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et184 = - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et185 = offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) - (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1) * 2.0 + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et186 = - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et187 = offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) - (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1) * 2.0 + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et188 = - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et189 = (Rb_1_1 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_1 * w_3 - Rb_1_3 * w_1) - (Rb_1_2 * w_3 - Rb_1_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et190 = (Rb_2_1 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_1 * w_3 - Rb_2_3 * w_1) - (Rb_2_2 * w_3 - Rb_2_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et191 = (Rb_3_1 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_1 * w_3 - Rb_3_3 * w_1) - (Rb_3_2 * w_3 - Rb_3_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et192 = (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et183 + et184) * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et185 + et186) * 2.0 + (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et187 + et188) * 2.0
    et193 = - Rb_1_1 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + (Rb_1_2 * w_3 - Rb_1_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)
    et194 = (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et195 = - Rb_2_1 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + (Rb_2_2 * w_3 - Rb_2_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)
    et196 = (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et197 = - Rb_3_1 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + (Rb_3_2 * w_3 - Rb_3_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)
    et198 = (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et199 = - offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1) * 2.0 + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) + (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et200 = - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et201 = - offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1) * 2.0 + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) + (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et202 = - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et203 = - offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1) * 2.0 + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) + (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et204 = - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et205 = (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et206 = (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et207 = (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et208 = Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)
    et209 = (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et210 = Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)
    et211 = (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et212 = Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)
    et213 = (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et214 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et215 = (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et216 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et217 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et218 = (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et219 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et220 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1))
    et221 = - (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et222 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et223 = et220 * et221 - g * mh * offset_x * 2.0 - g * mr * offset_x * 2.0 + mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et224 = mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et225 = (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et226 = - (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et227 = (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et228 = - (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et229 = (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et230 = - (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et231 = offset_x * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + Rb_1_1 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_2 * w_3 - Rb_1_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
    et232 = (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et233 = offset_x * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + Rb_2_1 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_2 * w_3 - Rb_2_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
    et234 = (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et235 = offset_x * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + Rb_3_1 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_2 * w_3 - Rb_3_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
    et236 = (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et237 = (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et238 = (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et239 = (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et240 = (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et241 = (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et242 = (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et243 = offset_x * (Rb_1_1 * w_3 - Rb_1_3 * w_1) - Rb_1_1 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_2 * w_3 - Rb_1_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
    et244 = (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * - 2.0
    et245 = offset_x * (Rb_2_1 * w_3 - Rb_2_3 * w_1) - Rb_2_1 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_2 * w_3 - Rb_2_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
    et246 = (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * - 2.0
    et247 = offset_x * (Rb_3_1 * w_3 - Rb_3_3 * w_1) - Rb_3_1 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_2 * w_3 - Rb_3_3 * w_2) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
    et248 = (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * - 2.0
    et249 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et250 = (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et251 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et252 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et253 = (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et254 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et255 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et256 = (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et257 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et258 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et259 = (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et260 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et261 = Rb_1_1 * (et157 + et158 + et159 + et160) + Rb_2_1 * (et163 + et164 + et165 + et166) + Rb_3_1 * (et169 + et170 + et171 + et172) - Rb_1_2 * (et175 + et176 + et177) - Rb_2_2 * (et180 + et181 + et182) - (mh * (et189 + et190 + et191 + et192)) / 2.0 - (mh * (et193 * et194 + et195 * et196 + et197 * et198 - (et199 + et200) * (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 - (et201 + et202) * (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 - (et203 + et204) * (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0)) / 2.0
    et262 = w_2 * (- Ib_1 * w_1 + (Ih_1 * (thetaD_WL_1 * 2.0 - w_1 * 2.0)) / 2.0 - (Ih_1 * (thetaD_WL_1 * 2.0 + w_1 * 2.0)) / 2.0 + (Ir_1 * (thetaD_WL_2 * 2.0 - w_1 * 2.0)) / 2.0 - (Ir_1 * (thetaD_WL_2 * 2.0 + w_1 * 2.0)) / 2.0 + (mr * (et205 + et206 + et207)) / 2.0 - (mr * (et208 * et209 + et210 * et211 + et212 * et213)) / 2.0 + (mh * (et214 + et215 + et216)) / 2.0 + (mh * (et217 + et218 + et219)) / 2.0) - Rb_3_2 * (et222 + et223 + et224)
    et263 = mr * ((Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et225 + et226) * 2.0 + (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et227 + et228) * 2.0 + (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et229 + et230) * 2.0 + et231 * et232 + et233 * et234 + et235 * et236) * (- 1.0 / 2.0)
    et264 = (mr * (et243 * et244 + et245 * et246 + et247 * et248 + (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et237 + et238) * 2.0 + (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et239 + et240) * 2.0 + (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et241 + et242) * 2.0)) / 2.0 - w_1 * (- Ib_2 * w_2 - Ih_2 * w_2 * 2.0 - Ir_2 * w_2 * 2.0 + (mr * (et249 + et250 + et251)) / 2.0 + (mr * (et252 + et253 + et254)) / 2.0 + (mh * (et255 + et256 + et257)) / 2.0 + (mh * (et258 + et259 + et260)) / 2.0)
    et265 = mr * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
    et266 = xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
    et267 = mr * (- offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
    et268 = - (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et269 = g * mr * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et270 = mh * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et271 = mh * (offset_x * w_2 - w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) + et265 * et266 + et267 * et268
    et272 = g * mh * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et273 = (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et274 = - (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et275 = (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et276 = - (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et277 = (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et278 = - (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et279 = (Rb_1_2 * w_3 - Rb_1_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - offset_x * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + Rb_1_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
    et280 = (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et281 = (Rb_2_2 * w_3 - Rb_2_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - offset_x * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + Rb_2_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
    et282 = (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et283 = (Rb_3_2 * w_3 - Rb_3_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - offset_x * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + Rb_3_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
    et284 = (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et285 = (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et286 = (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et287 = (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et288 = (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et289 = (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et290 = (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et291 = (Rb_1_2 * w_3 - Rb_1_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - offset_x * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + Rb_1_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
    et292 = (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * - 2.0
    et293 = (Rb_2_2 * w_3 - Rb_2_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - offset_x * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + Rb_2_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
    et294 = (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * - 2.0
    et295 = (Rb_3_2 * w_3 - Rb_3_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - offset_x * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + Rb_3_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
    et296 = (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * - 2.0
    et297 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1))
    et298 = - (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et299 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et300 = et297 * et298 + mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et301 = mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et302 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1))
    et303 = - (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et304 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et305 = et302 * et303 + mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et306 = mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et307 = offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) - (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1) * 2.0 + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et308 = - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et309 = offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) - (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1) * 2.0 + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et310 = - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et311 = offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) - (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1) * 2.0 + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et312 = - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et313 = (Rb_1_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - offset_x * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + (Rb_1_2 * w_3 - Rb_1_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et314 = (Rb_2_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - offset_x * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + (Rb_2_2 * w_3 - Rb_2_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et315 = (Rb_3_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - offset_x * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + (Rb_3_2 * w_3 - Rb_3_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et316 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (et307 + et308) * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (et309 + et310) * 2.0 + (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (et311 + et312) * 2.0
    et317 = Rb_1_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - offset_x * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + (Rb_1_2 * w_3 - Rb_1_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et318 = (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et319 = Rb_2_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - offset_x * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + (Rb_2_2 * w_3 - Rb_2_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et320 = (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et321 = Rb_3_1 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - offset_x * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + (Rb_3_2 * w_3 - Rb_3_3 * w_2) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et322 = (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et323 = - offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1) * 2.0 + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) + (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et324 = - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et325 = - offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1) * 2.0 + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) + (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et326 = - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et327 = - offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1) * 2.0 + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) + (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et328 = - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et329 = (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et330 = (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et331 = (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et332 = (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et333 = (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et334 = (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et335 = (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et336 = (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et337 = (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et338 = (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et339 = (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et340 = (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et341 = (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et342 = (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et343 = (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et344 = Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)
    et345 = (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et346 = Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)
    et347 = (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et348 = Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)
    et349 = (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et350 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et351 = (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et352 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et353 = (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et354 = (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et355 = (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et356 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1))
    et357 = - (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et358 = mr * (w_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + w_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et359 = et356 * et357 - g * mh * offset_x * 2.0 - g * mr * offset_x * 2.0 + mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et360 = mh * (w_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - w_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et361 = mr * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
    et362 = xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
    et363 = mr * (- offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
    et364 = - (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et365 = mh * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et366 = mh * (offset_x * w_2 - w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) + et361 * et362 + et363 * et364
    et367 = mr * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
    et368 = xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
    et369 = mr * (- offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
    et370 = - (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et371 = mh * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et372 = mh * (offset_x * w_2 - w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) + et367 * et368 + et369 * et370
    et373 = Rb_3_1 * (et269 + et270 + et271 + et272) + (mr * (et279 * et280 + et281 * et282 + et283 * et284 + (et273 + et274) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (et275 + et276) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (et277 + et278) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0)) / 2.0
    et374 = mr * ((Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (et285 + et286) * 2.0 + (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (et287 + et288) * 2.0 + (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (et289 + et290) * 2.0 + et291 * et292 + et293 * et294 + et295 * et296) * (- 1.0 / 2.0) + Rb_1_3 * (et299 + et300 + et301) + Rb_2_3 * (et304 + et305 + et306) + (mh * (et313 + et314 + et315 + et316)) / 2.0
    et375 = (mh * (et317 * et318 + et319 * et320 + et321 * et322 - (et323 + et324) * (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 - (et325 + et326) * (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 - (et327 + et328) * (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0)) / 2.0 - w_1 * ((mr * (et329 + et330 + et331)) / 2.0 + (mr * (et332 + et333 + et334)) / 2.0 + Ib_3 * w_3 + Ih_3 * w_3 * 2.0 + Ir_3 * w_3 * 2.0 + (mh * (et335 + et336 + et337)) / 2.0 + (mh * (et338 + et339 + et340)) / 2.0)
    et376 = - w_3 * (- Ib_1 * w_1 + (mh * (et350 + et351 + et352)) / 2.0 + (mh * (et353 + et354 + et355)) / 2.0 + (mr * (et341 + et342 + et343)) / 2.0 - (mr * (et344 * et345 + et346 * et347 + et348 * et349)) / 2.0 + (Ih_1 * (thetaD_WL_1 * 2.0 - w_1 * 2.0)) / 2.0 - (Ih_1 * (thetaD_WL_1 * 2.0 + w_1 * 2.0)) / 2.0 + (Ir_1 * (thetaD_WL_2 * 2.0 - w_1 * 2.0)) / 2.0 - (Ir_1 * (thetaD_WL_2 * 2.0 + w_1 * 2.0)) / 2.0) + Rb_3_3 * (et358 + et359 + et360) + Rb_1_1 * (et365 + et366) + Rb_2_1 * (et371 + et372)
    et377 = mr * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
    et378 = xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
    et379 = mr * (- offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
    et380 = - (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et381 = g * mr * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et382 = mh * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et383 = mh * (offset_x * w_2 - w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) + et377 * et378 + et379 * et380
    et384 = g * mh * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et385 = mr * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
    et386 = - (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et387 = mh * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et388 = - mh * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et389 = mr * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et390 = et385 * et386
    et391 = mr * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
    et392 = - (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et393 = mh * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et394 = - mh * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et395 = mr * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et396 = et391 * et392
    et397 = mr * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
    et398 = - (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et399 = mh * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et400 = - mh * (- offset_x * w_3 + w_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et401 = mr * (offset_x * w_3 - w_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + (L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et402 = et397 * et398
    et403 = (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_3 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
    et404 = (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et405 = (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_3 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
    et406 = (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et407 = (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_3 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
    et408 = (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et409 = (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et410 = - (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et411 = (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et412 = - (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et413 = (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et414 = - (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et415 = (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_3 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
    et416 = (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et417 = (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_3 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
    et418 = (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et419 = (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_3 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
    et420 = (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et421 = (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et422 = (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et423 = (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et424 = (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et425 = (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et426 = (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et427 = (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et428 = (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et429 = (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et430 = (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et431 = (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et432 = (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et433 = (Rb_1_2 * offset_x + Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et434 = (Rb_2_2 * offset_x + Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et435 = (Rb_3_2 * offset_x + Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et436 = (Rb_1_2 * offset_x - Rb_1_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et437 = (Rb_2_2 * offset_x - Rb_2_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et438 = (Rb_3_2 * offset_x - Rb_3_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et439 = mr * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
    et440 = xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
    et441 = mr * (- offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
    et442 = -(xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et443 = mh * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et444 = mh * (offset_x * w_2 - w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) + et439 * et440 + et441 * et442
    h = ft_1(np.array([Ib_2,Ib_3,Ih_2,Ih_3,Ir_2,Ir_3,L3a,L3c,L7a,P5_1,P5_2,Rb_1_1,Rb_1_2,Rb_1_3,Rb_2_1,Rb_2_2,Rb_2_3,Rb_3_1,Rb_3_2,Rb_3_3,alpha_3,et261,et262,et263,et264,et373,et374,et375,et376,et381,et382,et383,et384,et387,et388,et389,et390,et393,et394,et395,et396,et399,et400,et401,et402,et403,et404,et405,et406,et407,et408,et409,et410,et411,et412,et413,et414,et415,et416,et417,et418,et419,et420,et421,et422,et423,et424,et425,et426,et427,et428,et429,et430,et431,et432,et433,et434,et435,et436,et437,et438,et443,et444,g,mb,mh,mr,offset_x,thetaD_WL_1,thetaD_WL_2,theta_WL_1,theta_WL_2,w_1,w_2,w_3,xD_1,xD_2,xD_3]))

    return M, h
    
@jit(nopython=True, fastmath=True)
def ft_1(ct=None):
    
    Ib_2 = ct[0]
    Ib_3 = ct[1]
    Ih_2 = ct[2]
    Ih_3 = ct[3]
    Ir_2 = ct[4]
    Ir_3 = ct[5]
    L3a = ct[6]
    L3c = ct[7]
    L7a = ct[8]
    P5_1 = ct[9]
    P5_2 = ct[10]
    Rb_1_1 = ct[11]
    Rb_1_2 = ct[12]
    Rb_1_3 = ct[13]
    Rb_2_1 = ct[14]
    Rb_2_2 = ct[15]
    Rb_2_3 = ct[16]
    Rb_3_1 = ct[17]
    Rb_3_2 = ct[18]
    Rb_3_3 = ct[19]
    alpha_3 = ct[20]
    et261 = ct[21]
    et262 = ct[22]
    et263 = ct[23]
    et264 = ct[24]
    et373 = ct[25]
    et374 = ct[26]
    et375 = ct[27]
    et376 = ct[28]
    et381 = ct[29]
    et382 = ct[30]
    et383 = ct[31]
    et384 = ct[32]
    et387 = ct[33]
    et388 = ct[34]
    et389 = ct[35]
    et390 = ct[36]
    et393 = ct[37]
    et394 = ct[38]
    et395 = ct[39]
    et396 = ct[40]
    et399 = ct[41]
    et400 = ct[42]
    et401 = ct[43]
    et402 = ct[44]
    et403 = ct[45]
    et404 = ct[46]
    et405 = ct[47]
    et406 = ct[48]
    et407 = ct[49]
    et408 = ct[50]
    et409 = ct[51]
    et410 = ct[52]
    et411 = ct[53]
    et412 = ct[54]
    et413 = ct[55]
    et414 = ct[56]
    et415 = ct[57]
    et416 = ct[58]
    et417 = ct[59]
    et418 = ct[60]
    et419 = ct[61]
    et420 = ct[62]
    et421 = ct[63]
    et422 = ct[64]
    et423 = ct[65]
    et424 = ct[66]
    et425 = ct[67]
    et426 = ct[68]
    et427 = ct[69]
    et428 = ct[70]
    et429 = ct[71]
    et430 = ct[72]
    et431 = ct[73]
    et432 = ct[74]
    et433 = ct[75]
    et434 = ct[76]
    et435 = ct[77]
    et436 = ct[78]
    et437 = ct[79]
    et438 = ct[80]
    et443 = ct[81]
    et444 = ct[82]
    g = ct[83]
    mb = ct[84]
    mh = ct[85]
    mr = ct[86]
    offset_x = ct[87]
    thetaD_WL_1 = ct[88]
    thetaD_WL_2 = ct[89]
    theta_WL_1 = ct[90]
    theta_WL_2 = ct[91]
    w_1 = ct[92]
    w_2 = ct[93]
    w_3 = ct[94]
    xD_1 = ct[95]
    xD_2 = ct[96]
    xD_3 = ct[97]

    cos_theta_WL_1 = cos(theta_WL_1)
    sin_theta_WL_1 = sin(theta_WL_1)
    cos_theta_WL_2 = cos(theta_WL_2)
    sin_theta_WL_2 = sin(theta_WL_2)
    cos_alpha_3 = cos(alpha_3)
    sin_alpha_3 = sin(alpha_3)

    et445 = mr * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
    et446 = xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)
    et447 = mr * (- offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1)
    et448 = - (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1))
    et449 = mh * (offset_x * w_2 + w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et450 = mh * (offset_x * w_2 - w_1 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) + et445 * et446 + et447 * et448
    et451 = offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) - (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1) * 2.0 + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et452 = - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et453 = offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) - (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1) * 2.0 + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et454 = - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et455 = offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) - (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1) * 2.0 + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et456 = - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et457 = Rb_1_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et458 = (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * - 2.0
    et459 = Rb_2_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et460 = (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * - 2.0
    et461 = Rb_3_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et462 = (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * - 2.0
    et463 = - offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1) * 2.0 + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) + (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et464 = - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et465 = - offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1) * 2.0 + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) + (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et466 = - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et467 = - offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1) * 2.0 + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) + (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et468 = - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et469 = Rb_1_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et470 = (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et471 = Rb_2_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et472 = (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et473 = Rb_3_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et474 = (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et475 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et476 = (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et477 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et478 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et479 = (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et480 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et481 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et482 = (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et483 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et484 = (Rb_1_3 * offset_x - Rb_1_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et485 = (Rb_2_3 * offset_x - Rb_2_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et486 = (Rb_3_3 * offset_x - Rb_3_1 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)) * (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et487 = - Rb_3_2 * (et381 + et382 + et383 + et384) - Rb_1_3 * (et387 + et388 + et389 + et390) - Rb_2_3 * (et393 + et394 + et395 + et396) - Rb_3_3 * (et399 + et400 + et401 + et402)
    et488 = (mr * (et403 * et404 + et405 * et406 + et407 * et408 + (et409 + et410) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (et411 + et412) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (et413 + et414) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0)) / 2.0
    et489 = (mr * (et415 * et416 + et417 * et418 + et419 * et420 + (et421 + et422) * (Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (et423 + et424) * (Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0 + (et425 + et426) * (Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1)) * 2.0)) / 2.0
    et490 = w_2 * ((mr * (et427 + et428 + et429)) / 2.0 + (mr * (et430 + et431 + et432)) / 2.0 + Ib_3 * w_3 + Ih_3 * w_3 * 2.0 + Ir_3 * w_3 * 2.0 + (mh * (et433 + et434 + et435)) / 2.0 + (mh * (et436 + et437 + et438)) / 2.0) - Rb_1_2 * (et443 + et444) - Rb_2_2 * (et449 + et450)
    et491 = (mh * (et457 * et458 + et459 * et460 + et461 * et462 + (et451 + et452) * (Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (et453 + et454) * (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 + (et455 + et456) * (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0)) / 2.0
    et492 = mh * ((Rb_1_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et463 + et464) * 2.0 + (Rb_2_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et465 + et466) * 2.0 + (Rb_3_2 * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et467 + et468) * 2.0 + et469 * et470 + et471 * et472 + et473 * et474) * (- 1.0 / 2.0)
    et493 = w_3 * (- Ib_2 * w_2 - Ih_2 * w_2 * 2.0 - Ir_2 * w_2 * 2.0 + (mr * (et475 + et476 + et477)) / 2.0 + (mr * (et478 + et479 + et480)) / 2.0 + (mh * (et481 + et482 + et483)) / 2.0 + (mh * (et484 + et485 + et486)) / 2.0)
    et494 = offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) * - 2.0 + (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) * 4.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1) * 4.0 + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et495 = Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 - Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et496 = offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) * 2.0 - (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) * 4.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1) * 4.0 + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 - (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et497 = Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et498 = (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 4.0 + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 4.0 + offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) * 2.0 + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) * 2.0
    et499 = (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * - 2.0 + Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et500 = (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 4.0 + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 4.0 - offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) * 2.0 + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) * 2.0
    et501 = (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et502 = offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) * - 2.0 + (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) * 4.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1) * 4.0 + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et503 = Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 - Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et504 = offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) * 2.0 - (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) * 4.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1) * 4.0 + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 - (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et505 = Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et506 = (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 4.0 + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 4.0 + offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) * 2.0 + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) * 2.0
    et507 = (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * - 2.0 + Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et508 = (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 4.0 + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 4.0 - offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) * 2.0 + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) * 2.0
    et509 = (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et510 = offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) * - 2.0 + (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) * 4.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1) * 4.0 + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et511 = Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 - Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et512 = offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) * 2.0 - (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) * 4.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1) * 4.0 + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 - (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et513 = Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et514 = (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 4.0 + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 4.0 + offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) * 2.0 + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) * 2.0
    et515 = (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * - 2.0 + Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et516 = (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 4.0 + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 4.0 - offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) * 2.0 + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) * 2.0 - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) * 2.0
    et517 = (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) * 2.0 - Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1) * 2.0
    et518 = ((L7a * cos_theta_WL_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1)) / 2.0 - (L7a * sin_theta_WL_2 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) / 2.0 + (L7a * Rb_1_2 * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_3 * thetaD_WL_2 * sin_theta_WL_2) / 2.0) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et519 = ((L7a * cos_theta_WL_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1)) / 2.0 - (L7a * sin_theta_WL_2 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) / 2.0 + (L7a * Rb_2_2 * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_3 * thetaD_WL_2 * sin_theta_WL_2) / 2.0) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et520 = ((L7a * cos_theta_WL_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1)) / 2.0 - (L7a * sin_theta_WL_2 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) / 2.0 + (L7a * Rb_3_2 * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_3 * thetaD_WL_2 * sin_theta_WL_2) / 2.0) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et521 = ((L7a * cos_theta_WL_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1)) / 2.0 + (L7a * sin_theta_WL_2 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) / 2.0 - (L7a * Rb_1_2 * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_3 * thetaD_WL_2 * sin_theta_WL_2) / 2.0) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et522 = ((L7a * cos_theta_WL_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1)) / 2.0 + (L7a * sin_theta_WL_2 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) / 2.0 - (L7a * Rb_2_2 * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_3 * thetaD_WL_2 * sin_theta_WL_2) / 2.0) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et523 = ((L7a * cos_theta_WL_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1)) / 2.0 + (L7a * sin_theta_WL_2 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) / 2.0 - (L7a * Rb_3_2 * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_3 * thetaD_WL_2 * sin_theta_WL_2) / 2.0) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et524 = (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et525 = - (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et526 = (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et527 = - (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et528 = (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et529 = - (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et530 = ((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (et524 + et525) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (et526 + et527) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (et528 + et529) * 2.0
    et531 = ((L7a * cos_theta_WL_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1)) / 2.0 - (L7a * sin_theta_WL_2 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) / 2.0 + (L7a * Rb_1_2 * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_3 * thetaD_WL_2 * sin_theta_WL_2) / 2.0) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * - 2.0
    et532 = ((L7a * cos_theta_WL_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1)) / 2.0 - (L7a * sin_theta_WL_2 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) / 2.0 + (L7a * Rb_2_2 * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_3 * thetaD_WL_2 * sin_theta_WL_2) / 2.0) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * - 2.0
    et533 = ((L7a * cos_theta_WL_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1)) / 2.0 - (L7a * sin_theta_WL_2 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) / 2.0 + (L7a * Rb_3_2 * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_3 * thetaD_WL_2 * sin_theta_WL_2) / 2.0) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * - 2.0
    et534 = (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et535 = (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et536 = (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et537 = (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et538 = (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et539 = (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et540 = ((L7a * Rb_1_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_2 * sin_theta_WL_2) / 2.0) * (et534 + et535) * 2.0 + ((L7a * Rb_2_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_2 * sin_theta_WL_2) / 2.0) * (et536 + et537) * 2.0 + ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) * (et538 + et539) * 2.0
    et541 = ((L7a * cos_theta_WL_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1)) / 2.0 + (L7a * sin_theta_WL_2 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) / 2.0 - (L7a * Rb_1_2 * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - (L7a * Rb_1_3 * thetaD_WL_2 * sin_theta_WL_2) / 2.0) * (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et542 = ((L7a * cos_theta_WL_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1)) / 2.0 + (L7a * sin_theta_WL_2 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) / 2.0 - (L7a * Rb_2_2 * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - (L7a * Rb_2_3 * thetaD_WL_2 * sin_theta_WL_2) / 2.0) * (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et543 = ((L7a * cos_theta_WL_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1)) / 2.0 + (L7a * sin_theta_WL_2 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) / 2.0 - (L7a * Rb_3_2 * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_3 * thetaD_WL_2 * sin_theta_WL_2) / 2.0) * (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et544 = (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + Rb_1_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
    et545 = (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et546 = (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + Rb_2_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
    et547 = (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et548 = (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + Rb_3_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
    et549 = (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et550 = (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et551 = - (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et552 = (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et553 = - (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et554 = (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * - 2.0 + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 + offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et555 = - (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et556 = (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1) - Rb_1_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
    et557 = (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et558 = (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1) - Rb_2_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
    et559 = (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et560 = (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1) - Rb_3_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
    et561 = (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et562 = (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et563 = (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et564 = (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et565 = (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et566 = (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * 2.0 + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * 2.0 - offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1)
    et567 = (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 ** 2 * sin_theta_WL_2) / 2.0 + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et568 = (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + Rb_1_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
    et569 = (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et570 = (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + Rb_2_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
    et571 = (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et572 = (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + Rb_3_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
    et573 = (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et574 = (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1) - Rb_1_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
    et575 = (xD_1 + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et576 = (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1) - Rb_2_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
    et577 = (xD_2 + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et578 = (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1) - Rb_3_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1)
    et579 = (xD_3 + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * sin_theta_WL_2) / 2.0 + L3c * cos_alpha_3 * cos_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * thetaD_WL_2 * cos_theta_WL_2) / 2.0 - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_2 * ((L7a * thetaD_WL_2 * sin_theta_WL_2) / 2.0 + thetaD_WL_1 * sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) + (L7a * cos_theta_WL_2) / 2.0 - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et580 = Rb_1_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1)
    et581 = (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et582 = Rb_2_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1)
    et583 = (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et584 = Rb_3_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1)
    et585 = (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et586 = offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) - (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1) * 2.0 + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et587 = - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et588 = offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) - (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1) * 2.0 + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et589 = - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et590 = offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) - (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1) * 2.0 + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) - (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et591 = - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et592 = Rb_1_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1)
    et593 = (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et594 = Rb_2_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1)
    et595 = (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et596 = Rb_3_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1)
    et597 = (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et598 = - offset_x * (w_2 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) + w_3 * (Rb_1_1 * w_3 - Rb_1_3 * w_1)) + (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1) * 2.0 + (w_1 * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - w_3 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) + (w_1 * (Rb_1_1 * w_3 - Rb_1_3 * w_1) + w_2 * (Rb_1_2 * w_3 - Rb_1_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et599 = - Rb_1_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et600 = - offset_x * (w_2 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) + w_3 * (Rb_2_1 * w_3 - Rb_2_3 * w_1)) + (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1) * 2.0 + (w_1 * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - w_3 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) + (w_1 * (Rb_2_1 * w_3 - Rb_2_3 * w_1) + w_2 * (Rb_2_2 * w_3 - Rb_2_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et601 = - Rb_2_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et602 = - offset_x * (w_2 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) + w_3 * (Rb_3_1 * w_3 - Rb_3_3 * w_1)) + (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) * 2.0 + (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1) * 2.0 + (w_1 * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - w_3 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) + (w_1 * (Rb_3_1 * w_3 - Rb_3_3 * w_1) + w_2 * (Rb_3_2 * w_3 - Rb_3_3 * w_2)) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1)
    et603 = - Rb_3_2 * (thetaD_WL_1 ** 2 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_3 * (thetaD_WL_1 ** 2 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 ** 2 * cos_alpha_3 * cos_theta_WL_1)
    et604 = Rb_1_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_1_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1)
    et605 = (xD_1 + Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et606 = Rb_2_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_2_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1)
    et607 = (xD_2 + Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et608 = Rb_3_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) - Rb_3_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1)
    et609 = (xD_3 + Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et610 = Rb_1_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_1_1 * w_2 - Rb_1_2 * w_1) - (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_1_1 * w_3 - Rb_1_3 * w_1)
    et611 = (xD_1 - Rb_1_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_1_2 * w_3 - Rb_1_3 * w_2) + (Rb_1_1 * w_2 - Rb_1_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_1_1 * w_3 - Rb_1_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et612 = Rb_2_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_2_1 * w_2 - Rb_2_2 * w_1) - (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_2_1 * w_3 - Rb_2_3 * w_1)
    et613 = (xD_2 - Rb_2_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_2_2 * w_3 - Rb_2_3 * w_2) + (Rb_2_1 * w_2 - Rb_2_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_2_1 * w_3 - Rb_2_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et614 = Rb_3_2 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) - (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1) * (Rb_3_1 * w_2 - Rb_3_2 * w_1) - (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) * (Rb_3_1 * w_3 - Rb_3_3 * w_1)
    et615 = (xD_3 - Rb_3_2 * (thetaD_WL_1 * sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * thetaD_WL_1 * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (thetaD_WL_1 * cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * thetaD_WL_1 * cos_alpha_3 * sin_theta_WL_1) + offset_x * (Rb_3_2 * w_3 - Rb_3_3 * w_2) + (Rb_3_1 * w_2 - Rb_3_2 * w_1) * (P5_2 + sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - (Rb_3_1 * w_3 - Rb_3_3 * w_1) * (P5_1 + cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0
    et616 = (mr * (et544 * et545 + et546 * et547 + et548 * et549 - (et550 + et551) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 - (et552 + et553) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 - (et554 + et555) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0)) / 2.0
    et617 = (mr * (et556 * et557 + et558 * et559 + et560 * et561 - (et562 + et563) * (Rb_1_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 - (et564 + et565) * (Rb_2_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 - (et566 + et567) * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0)) / 2.0 - (mr * (et568 * et569 + et570 * et571 + et572 * et573)) / 2.0 - (mr * (et574 * et575 + et576 * et577 + et578 * et579)) / 2.0
    et618 = (mh * (et580 * et581 + et582 * et583 + et584 * et585 - (et586 + et587) * (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 - (et588 + et589) * (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0 - (et590 + et591) * (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * 2.0)) / 2.0
    et619 = mh * (et592 * et593 + et594 * et595 + et596 * et597 + (Rb_1_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_1_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et598 + et599) * 2.0 + (Rb_2_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_2_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et600 + et601) * 2.0 + (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) * (et602 + et603) * 2.0) * (- 1.0 / 2.0) - (mh * (et604 * et605 + et606 * et607 + et608 * et609)) / 2.0
    et620 = (mh * (et610 * et611 + et612 * et613 + et614 * et615)) / 2.0 + g * mr * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) - g * mr * (Rb_3_2 * (sin_theta_WL_1 * (L3a + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1)) + g * mh * (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) + Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    et621 = - g * mh * (Rb_3_2 * (sin_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) + L3c * cos_alpha_3 * cos_theta_WL_1) - Rb_3_3 * (cos_theta_WL_1 * (L3a / 2.0 + L3c * sin_alpha_3) - L3c * cos_alpha_3 * sin_theta_WL_1))
    mt16 = np.array([et616 + et617 + et618 + et619 + et620 + et621,mr * (et518 + et519 + et520) * (- 1.0 / 2.0) - (mr * (et521 + et522 + et523)) / 2.0 - (mr * (et530 + et531 + et532 + et533)) / 2.0 + (mr * (et540 + et541 + et542 + et543)) / 2.0 + g * mr * ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 - (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0) + g * mr * ((L7a * Rb_3_3 * cos_theta_WL_2) / 2.0 + (L7a * Rb_3_2 * sin_theta_WL_2) / 2.0),(mh * (et510 + et511)) / 2.0 - (mh * (et512 + et513)) / 2.0 - (mr * (et514 + et515)) / 2.0 + (mr * (et516 + et517)) / 2.0,(mh * (et502 + et503)) / 2.0 - (mh * (et504 + et505)) / 2.0 - (mr * (et506 + et507)) / 2.0 + (mr * (et508 + et509)) / 2.0])
    mt17 = np.array([g * mb + g * mh * 2.0 + g * mr * 2.0 + (mh * (et494 + et495)) / 2.0 - (mh * (et496 + et497)) / 2.0 - (mr * (et498 + et499)) / 2.0 + (mr * (et500 + et501)) / 2.0,et487 + et488 + et489 + et490 + et491 + et492 + et493,et373 + et374 + et375 + et376,et261 + et262 + et263 + et264])
    h = np.array([*mt16, *mt17]).reshape(8,1)
    
    return h